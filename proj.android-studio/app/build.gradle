apply plugin: 'com.android.application'

android {
    compileSdkVersion 28
    buildToolsVersion "28.0.3"

    defaultConfig {
        applicationId "com.rosapp.Education"
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        manifestPlaceholders = [manifestApplicationId: "${applicationId}",
                                onesignal_app_id: "984a6d26-70f3-4791-8a68-edbb435dde24",
                                onesignal_google_project_number: "354797241783"]

        externalNativeBuild {
            ndkBuild {
                targets 'MyGame'
                arguments 'NDK_TOOLCHAIN_VERSION=clang'
                arguments '-j' + Runtime.runtime.availableProcessors()
            }
        }

        ndk {
            abiFilters = ["armeabi-v7a", "arm64-v8a", "x86"]
        }

        multiDexEnabled true
    }

    sourceSets.main {
        java.srcDir "src"
        res.srcDir "res"
        jniLibs.srcDir "libs"
        manifest.srcFile "AndroidManifest.xml"
        assets.srcDir "../../Resources"
        aidl.srcDirs = ['src']
    }

    externalNativeBuild {
        ndkBuild {
            path "jni/Android.mk"
        }
    }

    signingConfigs {

       release {
            if (project.hasProperty("RELEASE_STORE_FILE")) {
                storeFile file(RELEASE_STORE_FILE)
                storePassword RELEASE_STORE_PASSWORD
                keyAlias RELEASE_KEY_ALIAS
                keyPassword RELEASE_KEY_PASSWORD
            }
        }
    }

    buildTypes {
        release {
            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            if (project.hasProperty("RELEASE_STORE_FILE")) {
                signingConfig signingConfigs.release
            }

            externalNativeBuild {
                ndkBuild {
                    arguments 'NDK_DEBUG=0'
                }
            }
        }

        debug {
            debuggable true
            jniDebuggable true
            renderscriptDebuggable true
            externalNativeBuild {
                ndkBuild {
                    arguments 'NDK_DEBUG=1'
                }
            }
        }
    }
    buildToolsVersion '28.0.3'
}

android.applicationVariants.all { variant ->
    // delete previous files first
    delete "${buildDir}/intermediates/assets/${variant.dirName}"

    variant.mergeAssets.doLast {
        copy {
            from "${buildDir}/../../../Resources"
            into "${buildDir}/intermediates/assets/${variant.dirName}"
            exclude "**/*.gz"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.onesignal:OneSignal:3.10.9@aar'
    implementation 'com.google.android.gms:play-services-ads:17.2.1'
    implementation 'com.google.android.gms:play-services-gcm:16.1.0'
    implementation 'com.google.android.gms:play-services-location:16.0.0'
    implementation 'com.google.firebase:firebase-core:16.0.9'
    implementation 'com.google.firebase:firebase-appindexing:18.0.0'
    implementation 'com.google.firebase:firebase-database:17.0.0'
    implementation 'com.facebook.android:facebook-android-sdk:4.42.0'
    implementation 'com.android.support:multidex:1.0.3'
    implementation project(':libcocos2dx')
}

task cleanAssets(type: Delete) {
    delete 'assets'
}

task copyAssets(type: Copy) {

    copy {
        from '../../Resources/res'
        into 'assets/res'
    }

    copy {
        from '../../Resources/sounds_ogg'
        into 'assets/sounds_ogg'
    }

    copy {
        from '../../Resources/anims'
        into 'assets/anims'
    }
}

clean.dependsOn cleanAssets
preBuild.dependsOn copyAssets

apply plugin: 'com.google.gms.google-services'
